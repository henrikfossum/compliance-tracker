// This is your Prisma schema file
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model PriceHistory {
  id             String    @id @default(uuid())
  shop           String
  productId      String
  variantId      String
  price          Float
  compareAtPrice Float?
  timestamp      DateTime  @default(now())
  isReference    Boolean   @default(false)

  @@index([shop, productId, variantId])
  @@index([timestamp])
}

model ComplianceRule {
  id           String    @id @default(uuid())
  countryCode  String
  ruleType     String    // "f√∏rpris", "salesDuration", "salesFrequency", etc.
  parameters   String    // JSON string with rule-specific parameters
  description  String?
  active       Boolean   @default(true)
  
  @@index([countryCode, ruleType])
}

model ProductCompliance {
  id             String    @id @default(uuid())
  shop           String
  productId      String
  variantId      String
  referencePrice Float?
  lastChecked    DateTime  @default(now())
  isOnSale       Boolean   @default(false)
  saleStartDate  DateTime?
  isCompliant    Boolean   @default(true)
  issues         String?   // JSON string with compliance issues

  @@unique([shop, productId, variantId])
}

model ShopSettings {
  id                String    @id @default(uuid())
  shop              String    @unique
  enabled           Boolean   @default(true)
  trackingFrequency Int       @default(12) // hours
  lastScan          DateTime?
  countryRules      String    // Comma-separated country codes
}